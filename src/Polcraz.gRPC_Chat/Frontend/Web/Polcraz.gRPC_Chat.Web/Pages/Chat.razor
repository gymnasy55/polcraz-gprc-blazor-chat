@page "/"
@using System.Threading
@using Grpc.Core
@using Polcraz.gRPC_Chat.Protos

@inject ChatRoom.ChatRoomClient ChatRoomClient
@inject NavigationManager NavigationManager

<div style="height: 80vh; width: 50vw">
    <div style="display: grid; grid-auto-rows: 1fr auto; height: 100%">
        <div style="max-height: 100%; grid-row: 1; overflow-y: auto; align-self: end">
            <ChatMessagesView Messages="@_messages" />
        </div>
        <div style="grid-row: 2">
            <RadzenTextArea @bind-Value="_message" Placeholder="Enter here..." Style="width: 100%" />
            <RadzenButton Click="SendMessageAsync" Style="width: 100%">Отправить</RadzenButton>
        </div>

    </div>
</div>

@code
{
    private readonly List<string> _messages = new List<string>();

    private string _message;

    private readonly CancellationTokenSource _cancelTokenSource = new CancellationTokenSource();

    protected override async Task OnInitializedAsync()
    {
        NavigationManager.LocationChanged += NavigationManagerOnLocationChanged;

        var serverStream = ChatRoomClient.JoinChat(new ChatRequest(), cancellationToken: _cancelTokenSource.Token);
        var stream = serverStream.ResponseStream;

        try
        {
            await foreach (var message in stream.ReadAllAsync())
            {
                _messages.Add(message.Message);
                this.StateHasChanged();
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
        finally
        {
            serverStream.Dispose();
        }
    }

    private void NavigationManagerOnLocationChanged(object sender, LocationChangedEventArgs e)
    {
        Dispose();
    }

    public void Dispose()
    {
        _cancelTokenSource.Cancel();
    }

    private async Task SendMessageAsync()
    {
        if (string.IsNullOrEmpty(_message))
            return;

        await ChatRoomClient.SendAsync(new ChatMessage
        {
            Message = _message
        });

        _message = string.Empty;
    }

}